{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","utils/helpers.ts","utils/constants.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setTouched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","getValidUrl","regExp","url","test","pattern","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","correctImdbUrl","correctImgUrl","isDisabled","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e2ea754.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","export const getValidUrl = (regExp: RegExp, url: string): boolean => {\n  return regExp.test(url);\n};\n","// eslint-disable-next-line max-len\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import { FC, FormEvent, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { getValidUrl } from '../../utils/helpers';\nimport { pattern } from '../../utils/constants';\n\ninterface NewMovieProps {\n  onAdd: (movie: Movie) => void\n}\n\nexport const NewMovie: FC<NewMovieProps> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const handleSubmitForm = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n\n    setCount(count + 1);\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const correctImdbUrl = getValidUrl(pattern, imdbUrl);\n  const correctImgUrl = getValidUrl(pattern, imgUrl);\n\n  const isDisabled\n    = !title\n    || !imdbId\n    || !correctImdbUrl\n    || !correctImgUrl;\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmitForm}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { FC, useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addNewMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}